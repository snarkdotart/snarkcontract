@startuml

title 1. Loan Sequence Diagram

actor Borrower
control BContract
database BStorage
control API
actor Owner

== Create Loan ==

Borrower -> BContract: create loan
BContract -> BStorage: create new record of loan
BContract -> BStorage: loan status = Prepairing
BContract -> BStorage: put all tokens into the NotApproved list

loop number tokens
  BContract -> BStorage: arrange tokens among three\nlists of different loan states
end

BContract -> API: emit event LoanCreated
API -> Owner: send an email to the token owner\nif the tokens are\nin the NotApproved list

== Approve Loan ==

Owner -> BContract: Approve Loan
BContract -> BStorage: check token's calendar
BContract -> BStorage: assign token to one of\nthe three lists of loan states
BContract -> BStorage: delete loan requests from the owner's list
BContract -> BStorage: if NotApproved list is empty then\nloan status = NotActive

== Start Loan ==

API -> BContract: Start loan
BContract -> BStorage: loan status = Active
note right
  Borrower can call "BorrowTokens" only
  when loan status = active
end note 


== Borrow Tokens of Loan ==

Borrower -> BContract: Borrow Tokens
loop through tokens in NotApproved list of loan states
  BContract -> BStorage: move the tokens to Declined list of loan states
  BContract -> BStorage: delete loan requests from owner's list
  BContract -> BStorage: set token's SaleType = Loan
end
loop through tokens in Approved list of loan states
  BContract -> BStorage: transferToken: payable\nfrom owner to borrower 
end
note right
  There borrower has to pay for 2 operations:
  1. initial transfer to borrow tokens
  2. final transfer to return tokens to real owners
end note
BContract -> BContract: transfer half of ethereum sum to Snark's wallet\nto cover the cost of returning the tokens to owners

== Stop Loan ==

API -> BContract: stop loan
loop through tokens in Approved list of loan states
  BContract -> BStorage: freeTrasfer: \nfrom borrower to owner
  BContract -> BStorage: set token's SaleType = None
end
BContract -> BStorage: loan status = Finished

== Decline Loan ==



@enduml
